#!/bin/bash
# Log file for debugging
LOGFILE="/tmp/uci-defaults-log.txt"
echo "Starting 99-custom.sh at $(date)" >> $LOGFILE
echo "编译固件大小为: $PROFILE MB"
echo "Include Docker: $INCLUDE_DOCKER"

# 输出调试信息
echo "$(date '+%Y-%m-%d %H:%M:%S') - 开始编译..."


# 定义所需安装的包列表 下列插件你都可以自行删减
PACKAGES=""
PACKAGES="$PACKAGES arptables-nft"
PACKAGES="$PACKAGES bash"
PACKAGES="$PACKAGES blkid"
PACKAGES="$PACKAGES ca-certificates"
PACKAGES="$PACKAGES cfdisk"
PACKAGES="$PACKAGES chinadns-ng"
PACKAGES="$PACKAGES coreutils"
PACKAGES="$PACKAGES coreutils-nohup"
PACKAGES="$PACKAGES coreutils-timeout"
PACKAGES="$PACKAGES curl"
PACKAGES="$PACKAGES ddns-go"
PACKAGES="$PACKAGES e2fsprogs"
PACKAGES="$PACKAGES ebtables-nft"
PACKAGES="$PACKAGES etherwake"
PACKAGES="$PACKAGES f2fs-tools"
PACKAGES="$PACKAGES ffmpeg"
PACKAGES="$PACKAGES git"
PACKAGES="$PACKAGES git-http"
PACKAGES="$PACKAGES ip6tables-mod-nat"
PACKAGES="$PACKAGES ip6tables-nft"
PACKAGES="$PACKAGES iperf3-ssl"
PACKAGES="$PACKAGES ip-full"
PACKAGES="$PACKAGES ipset"
PACKAGES="$PACKAGES ipt2socks"
PACKAGES="$PACKAGES iptables-mod-conntrack-extra"
PACKAGES="$PACKAGES iptables-mod-extra"
PACKAGES="$PACKAGES iptables-mod-ipopt"
PACKAGES="$PACKAGES iptables-mod-tproxy"
PACKAGES="$PACKAGES iptables-nft"
PACKAGES="$PACKAGES iwlwifi-firmware-ax210"
PACKAGES="$PACKAGES jq"
PACKAGES="$PACKAGES kmod-fs-autofs4"
PACKAGES="$PACKAGES kmod-fs-exfat"
PACKAGES="$PACKAGES kmod-fs-ext4"
PACKAGES="$PACKAGES kmod-inet-diag"
PACKAGES="$PACKAGES kmod-ipt-conntrack-extra"
PACKAGES="$PACKAGES kmod-ipt-fullconenat"
PACKAGES="$PACKAGES kmod-ipt-ipopt"
PACKAGES="$PACKAGES kmod-ipt-nat"
PACKAGES="$PACKAGES kmod-ipt-nat6"
PACKAGES="$PACKAGES kmod-ipt-offload"
PACKAGES="$PACKAGES kmod-ipt-raw"
PACKAGES="$PACKAGES kmod-ipt-tproxy"
PACKAGES="$PACKAGES kmod-iwlwifi"
PACKAGES="$PACKAGES kmod-mt76"
PACKAGES="$PACKAGES kmod-mt7921-common"
PACKAGES="$PACKAGES kmod-mt7921e"
PACKAGES="$PACKAGES kmod-mt7921-firmware"
PACKAGES="$PACKAGES kmod-mt7921u"
PACKAGES="$PACKAGES kmod-mt7922-firmware"
PACKAGES="$PACKAGES kmod-mt792x-common"
PACKAGES="$PACKAGES kmod-mt792x-usb"
PACKAGES="$PACKAGES kmod-netlink-diag"
PACKAGES="$PACKAGES kmod-nf-conncount"
PACKAGES="$PACKAGES kmod-nft-arp"
PACKAGES="$PACKAGES kmod-nft-bridge"
PACKAGES="$PACKAGES kmod-nft-connlimit"
PACKAGES="$PACKAGES kmod-nft-dup-inet"
PACKAGES="$PACKAGES kmod-nft-fib"
PACKAGES="$PACKAGES kmod-nft-netdev"
PACKAGES="$PACKAGES kmod-nft-queue"
PACKAGES="$PACKAGES kmod-nft-tproxy"
PACKAGES="$PACKAGES kmod-nft-xfrm"
PACKAGES="$PACKAGES kmod-sdhci"
PACKAGES="$PACKAGES kmod-tun"
PACKAGES="$PACKAGES kmod-usb2"
PACKAGES="$PACKAGES kmod-usb-core"
PACKAGES="$PACKAGES kmod-usb-ehci"
PACKAGES="$PACKAGES kmod-usb-ohci"
PACKAGES="$PACKAGES kmod-usb-storage"
PACKAGES="$PACKAGES kmod-usb-storage-extras"
PACKAGES="$PACKAGES kmod-vhost"
PACKAGES="$PACKAGES kmod-vhost-net"
PACKAGES="$PACKAGES libcap"
PACKAGES="$PACKAGES libcap-bin"
PACKAGES="$PACKAGES libext2fs"
PACKAGES="$PACKAGES libffmpeg-full"
PACKAGES="$PACKAGES losetup"
PACKAGES="$PACKAGES lsblk"
PACKAGES="$PACKAGES lsof"
PACKAGES="$PACKAGES luci-app-argon-config"
PACKAGES="$PACKAGES luci-app-autoreboot"
PACKAGES="$PACKAGES luci-app-ddns-go"
PACKAGES="$PACKAGES luci-app-diskman"
PACKAGES="$PACKAGES luci-app-homeproxy"
PACKAGES="$PACKAGES luci-app-minidlna"
PACKAGES="$PACKAGES luci-app-msd_lite"
PACKAGES="$PACKAGES luci-app-mwan3"
PACKAGES="$PACKAGES luci-app-mwan3helper"
PACKAGES="$PACKAGES luci-app-nft-qos"
PACKAGES="$PACKAGES luci-app-openclash"
PACKAGES="$PACKAGES luci-app-passwall"
PACKAGES="$PACKAGES luci-app-pppoe-relay"
PACKAGES="$PACKAGES luci-app-ramfree"
PACKAGES="$PACKAGES luci-app-smartdns"
PACKAGES="$PACKAGES luci-app-syncdial"
PACKAGES="$PACKAGES luci-app-ttyd"
PACKAGES="$PACKAGES luci-app-unblockneteasemusic"
PACKAGES="$PACKAGES luci-app-upnp"
PACKAGES="$PACKAGES luci-app-vlmcsd"
PACKAGES="$PACKAGES luci-app-watchcat"
PACKAGES="$PACKAGES luci-app-wifischedule"
PACKAGES="$PACKAGES luci-app-wol"
PACKAGES="$PACKAGES luci-app-zerotier"
PACKAGES="$PACKAGES luci-base"
PACKAGES="$PACKAGES luci-i18n-argon-config-zh-cn"
PACKAGES="$PACKAGES luci-i18n-autoreboot-zh-cn"
PACKAGES="$PACKAGES luci-i18n-ddns-go-zh-cn"
PACKAGES="$PACKAGES luci-i18n-diskman-zh-cn"
PACKAGES="$PACKAGES luci-i18n-firewall-zh-cn"
PACKAGES="$PACKAGES luci-i18n-homeproxy-zh-cn"
PACKAGES="$PACKAGES luci-i18n-minidlna-zh-cn"
PACKAGES="$PACKAGES luci-i18n-msd_lite-zh-cn"
PACKAGES="$PACKAGES luci-i18n-mwan3helper-zh-cn"
PACKAGES="$PACKAGES luci-i18n-mwan3-zh-cn"
PACKAGES="$PACKAGES luci-i18n-nft-qos-zh-cn"
PACKAGES="$PACKAGES luci-i18n-passwall-zh-cn"
PACKAGES="$PACKAGES luci-i18n-pppoe-relay-zh-cn"
PACKAGES="$PACKAGES luci-i18n-ramfree-zh-cn"
PACKAGES="$PACKAGES luci-i18n-smartdns-zh-cn"
PACKAGES="$PACKAGES luci-i18n-ttyd-zh-cn"
PACKAGES="$PACKAGES luci-i18n-upnp-zh-cn"
PACKAGES="$PACKAGES luci-i18n-vlmcsd-zh-cn"
PACKAGES="$PACKAGES luci-i18n-watchcat-zh-cn"
PACKAGES="$PACKAGES luci-i18n-wifischedule-zh-cn"
PACKAGES="$PACKAGES luci-i18n-wol-zh-cn"
PACKAGES="$PACKAGES luci-i18n-zerotier-zh-cn"
PACKAGES="$PACKAGES luci-lib-jsonc"
PACKAGES="$PACKAGES luci-theme-argon"
PACKAGES="$PACKAGES minidlna"
PACKAGES="$PACKAGES miniupnpd-nftables"
PACKAGES="$PACKAGES mount-utils"
PACKAGES="$PACKAGES msd_lite"
PACKAGES="$PACKAGES mwan3"
PACKAGES="$PACKAGES nft-qos"
PACKAGES="$PACKAGES openssh-sftp-server"
PACKAGES="$PACKAGES openssl-util"
PACKAGES="$PACKAGES parted"
PACKAGES="$PACKAGES pdnsd-alt"
PACKAGES="$PACKAGES python3"
PACKAGES="$PACKAGES python3-light"
PACKAGES="$PACKAGES resize2fs"
PACKAGES="$PACKAGES ruby"
PACKAGES="$PACKAGES ruby-yaml"
PACKAGES="$PACKAGES script-utils"
PACKAGES="$PACKAGES sing-box"
PACKAGES="$PACKAGES smartdns"
PACKAGES="$PACKAGES smartmontools"
PACKAGES="$PACKAGES speedtest-cli"
PACKAGES="$PACKAGES speedtest-netperf"
PACKAGES="$PACKAGES tree"
PACKAGES="$PACKAGES ttyd"
PACKAGES="$PACKAGES unzip"
PACKAGES="$PACKAGES wget-ssl"
PACKAGES="$PACKAGES wifischedule"
PACKAGES="$PACKAGES wpad-openssl"
PACKAGES="$PACKAGES xtables-legacy"
PACKAGES="$PACKAGES xtables-nft"
PACKAGES="$PACKAGES zerotier"

#24.10 增加几个必备组件 方便用户安装iStore
PACKAGES="$PACKAGES luci-i18n-package-manager-zh-cn"
PACKAGES="$PACKAGES fdisk"
PACKAGES="$PACKAGES luci-i18n-samba4-zh-cn"

# 判断是否需要编译 Docker 插件
if [ "$INCLUDE_DOCKER" = "yes" ]; then
    PACKAGES="$PACKAGES luci-i18n-dockerman-zh-cn"
    echo "Adding package: luci-i18n-dockerman-zh-cn"
fi

# 构建镜像
echo "$(date '+%Y-%m-%d %H:%M:%S') - Building image with the following packages:"
echo "$PACKAGES"

make image PROFILE="generic" PACKAGES="$PACKAGES" FILES="/home/build/immortalwrt/files" ROOTFS_PARTSIZE=$PROFILE

if [ $? -ne 0 ]; then
    echo "$(date '+%Y-%m-%d %H:%M:%S') - Error: Build failed!"
    exit 1
fi

echo "$(date '+%Y-%m-%d %H:%M:%S') - Build completed successfully."
